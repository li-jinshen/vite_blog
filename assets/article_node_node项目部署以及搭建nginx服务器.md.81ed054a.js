import{_ as s,o as a,c as n,X as l}from"./chunks/framework.8aaf079c.js";const o="/assets/n1.934b43a4.png",p="/assets/n2.a6b2d728.png",e="/assets/n3.b3c69175.png",t="/assets/n4.7efe6230.png",c="/assets/n5.6898dd60.png",r="/assets/n6.79bd1d72.png",i="/assets/n7.fb6bb96c.png",y="/assets/n8.8461e8a4.png",C="/assets/n9.97195df6.png",d="/assets/n10.6ec474a5.png",D="/assets/n11.b7f9d2d8.png",h="/assets/n12.f6129f1c.png",g="/assets/n13.d5999c8e.png",A="/assets/n14.9750ca31.png",F="/assets/n15.aecc4a28.png",P=JSON.parse('{"title":"node项目部署以及搭建nginx服务器","description":"","frontmatter":{},"headers":[],"relativePath":"article/node/node项目部署以及搭建nginx服务器.md","filePath":"article/node/node项目部署以及搭建nginx服务器.md"}'),b={name:"article/node/node项目部署以及搭建nginx服务器.md"},u=l('<p>因为阿里云的服务器就要到期，所以就需要重新购买服务器，考虑到服务器续费有点贵而又赶上腾讯云在搞周年庆的活动，所以这次就购买了腾讯云的服务器，也因为更换了服务器，所以就得重新部署博客项目</p><p><strong>更多文章请访问 <a href="https://lijinshen.cn" target="_blank" rel="noreferrer">深的个人博客</a></strong></p><h2 id="博客项目技术栈" tabindex="-1">博客项目技术栈 <a class="header-anchor" href="#博客项目技术栈" aria-label="Permalink to &quot;博客项目技术栈&quot;">​</a></h2><h3 id="前端" tabindex="-1">前端 <a class="header-anchor" href="#前端" aria-label="Permalink to &quot;前端&quot;">​</a></h3><blockquote><p>vue全家桶 axios elementUI vue-socket.io echarts</p></blockquote><h3 id="后端" tabindex="-1">后端 <a class="header-anchor" href="#后端" aria-label="Permalink to &quot;后端&quot;">​</a></h3><blockquote><p>node (koa2) socket.io</p></blockquote><h3 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h3><blockquote><p>mongodb</p></blockquote><h3 id="服务器" tabindex="-1">服务器 <a class="header-anchor" href="#服务器" aria-label="Permalink to &quot;服务器&quot;">​</a></h3><blockquote><p>nginx</p></blockquote><h2 id="上线流程" tabindex="-1">上线流程 <a class="header-anchor" href="#上线流程" aria-label="Permalink to &quot;上线流程&quot;">​</a></h2><h3 id="服务器购买-域名购买-域名备案-公安备案" tabindex="-1">服务器购买，域名购买，域名备案，公安备案 <a class="header-anchor" href="#服务器购买-域名购买-域名备案-公安备案" aria-label="Permalink to &quot;服务器购买，域名购买，域名备案，公安备案&quot;">​</a></h3><p>购买服务器的流程这里就不多写了，大家可以选择合适的服务器购买，阿里云和腾讯云的部署流程都是差不多的，当然前提是服务器的系统要一致，我这里选择的服务器系统是==centos7==，所以以下的操作流程中的部分操作仅适合centos7系统的服务器，购买服务器之后，还需要购买域名，域名购买之后是需要进行备案的，备案的时间各地的时间都不一样，大概也就是8-15天左右吧，域名备案的流程阿里云和腾讯云都是有教程的，按教程走就行了。域名备好案之后，还需要进行公安备案，流程的话自行百度吧。</p><h3 id="使用xftp-和-xshell-连接服务器" tabindex="-1">使用xftp 和 xshell 连接服务器 <a class="header-anchor" href="#使用xftp-和-xshell-连接服务器" aria-label="Permalink to &quot;使用xftp 和 xshell 连接服务器&quot;">​</a></h3><p><a href="https://www.netsarang.com/zh/xftp-download/" target="_blank" rel="noreferrer">xftp 和 xshell 下载地址</a></p><p><img src="'+o+'" alt=""></p><h4 id="连接服务器" tabindex="-1">连接服务器 <a class="header-anchor" href="#连接服务器" aria-label="Permalink to &quot;连接服务器&quot;">​</a></h4><p>以下是xshell 连接服务器的方法，xftp方法类似 <strong>1、打开xshell，新建会话</strong><img src="'+p+'" alt=""><strong>2、填写必要信息：ip地址（服务器的公网IP），登陆名，登陆密码</strong><img src="'+e+'" alt=""><img src="'+t+'" alt=""><strong>连接成功</strong><img src="'+c+'" alt=""></p><h4 id="重置密码-忘记密码或者不知道登陆密码才需要执行这一步" tabindex="-1">重置密码（忘记密码或者不知道登陆密码才需要执行这一步） <a class="header-anchor" href="#重置密码-忘记密码或者不知道登陆密码才需要执行这一步" aria-label="Permalink to &quot;重置密码（忘记密码或者不知道登陆密码才需要执行这一步）&quot;">​</a></h4><p>登陆腾讯云（阿里云）查看你购买的云服务器，并执行以下操作 <img src="'+r+`" alt=""></p><h3 id="在服务器中安装node" tabindex="-1">在服务器中安装node <a class="header-anchor" href="#在服务器中安装node" aria-label="Permalink to &quot;在服务器中安装node&quot;">​</a></h3><p>以下操作会使用到部分Linux命令</p><h4 id="安装-npm" tabindex="-1">安装 npm <a class="header-anchor" href="#安装-npm" aria-label="Permalink to &quot;安装 npm&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">（可以在任意目录）</span></span></code></pre></div><h4 id="检测npm是否安装成功" tabindex="-1">检测npm是否安装成功 <a class="header-anchor" href="#检测npm是否安装成功" aria-label="Permalink to &quot;检测npm是否安装成功&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">（centOS的yum安装的npm是3.10.10的版本，比较低，但是不影响后面几步的操作，当完成node安装之后，自动升级npm）</span></span></code></pre></div><p>==安装淘宝镜像==</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--registry=https://registry.npm.taobao.org</span></span></code></pre></div><h4 id="通过npm安装-n-模块-n模块的作用是node的版本管理器" tabindex="-1">通过npm安装 n 模块（n模块的作用是node的版本管理器） <a class="header-anchor" href="#通过npm安装-n-模块-n模块的作用是node的版本管理器" aria-label="Permalink to &quot;通过npm安装 n 模块（n模块的作用是node的版本管理器）&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span></span></code></pre></div><h4 id="检测-n模块-是否安装成功-会显示很大一段n的命令" tabindex="-1">检测 n模块 是否安装成功（会显示很大一段n的命令） <a class="header-anchor" href="#检测-n模块-是否安装成功-会显示很大一段n的命令" aria-label="Permalink to &quot;检测 n模块 是否安装成功（会显示很大一段n的命令）&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--help</span></span></code></pre></div><h4 id="通过-n命令-来安装和切换各个版本的node" tabindex="-1">通过 n命令 来安装和切换各个版本的node <a class="header-anchor" href="#通过-n命令-来安装和切换各个版本的node" aria-label="Permalink to &quot;通过 n命令 来安装和切换各个版本的node&quot;">​</a></h4><p>安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stable</span><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">安装稳定版本</span></span>
<span class="line"><span style="color:#FFCB6B;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">latest</span><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">安装最新的版本</span></span>
<span class="line"><span style="color:#FFCB6B;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">x.x.x</span><span style="color:#A6ACCD;">     </span><span style="color:#C3E88D;">安装x.x.x版本的node</span></span></code></pre></div><p>切换</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">直接</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">回车，上下方向键选择当前需要的node版本</span></span>
<span class="line"><span style="color:#FFCB6B;">（安装/切换</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">之后，需要关闭一下xshell，才能通过</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">检测当前node版本，npm版本也会自动升级）</span></span></code></pre></div><h4 id="在服务端运行node项目" tabindex="-1">在服务端运行node项目 <a class="header-anchor" href="#在服务端运行node项目" aria-label="Permalink to &quot;在服务端运行node项目&quot;">​</a></h4><p>相关文章 <a href="http://www.yemengs.cn/module/article?id=5e5b5f40f49869196d4e8189" target="_blank" rel="noreferrer">vue项目部署到node项目中</a><a href="http://www.yemengs.cn/module/article?id=5e60f0f14adba5387f1ed3c4" target="_blank" rel="noreferrer">解决vue项目打包部署到服务器后刷新页面报告404的问题</a></p><p><strong>步骤</strong></p><ul><li>在本地测试好</li><li>把项目文件通过ftp上传到服务器(可以将项目上传到root文件夹中)，注意不要上传 node_modules 因为内容太多很慢，可以在服务器用npm i命令安装依赖</li><li>在服务器安全组里面添加安全组规则，开放端口</li><li>在xshell运行nodejs文件启动服务</li><li>使用 公网ip:端口 的形式，所有人都能访问你的程序</li></ul><h3 id="服务器安装mongodb" tabindex="-1">服务器安装mongodb <a class="header-anchor" href="#服务器安装mongodb" aria-label="Permalink to &quot;服务器安装mongodb&quot;">​</a></h3><p>以CentOs为例，详细步骤在<a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-red-hat/" target="_blank" rel="noreferrer">mongodb官网</a>，其他版本Linux都可以在官网找到。简单整理一下：</p><ol><li>使用vim命令创建repo文件 <code>vim /etc/yum.repos.d/mongodb-org-4.0.repo </code>，<em>按 i</em> 进入编辑模式，复制(shift+ins)以下内容到该文件中，<em>按 ESC</em> ，<em>输入 :wq</em>，保存退出。</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">mongodb-org-4.0</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">MongoDB</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Repository</span></span>
<span class="line"><span style="color:#A6ACCD;">baseurl</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">https://repo.mongodb.org/yum/redhat/</span><span style="color:#A6ACCD;">$releasever</span><span style="color:#C3E88D;">/mongodb-org/4.0/x86_64/</span></span>
<span class="line"><span style="color:#A6ACCD;">gpgcheck</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">enabled</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">gpgkey</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">https://www.mongodb.org/static/pgp/server-4.0.asc</span></span></code></pre></div><ol start="2"><li>运行命令 <code>sudo yum install -y mongodb-org</code>，等安装。</li><li>运行命令 <code>sudo service mongod start</code>，启动mongodb，全部完成了。</li></ol><h3 id="安装-pm2-实现进程守护" tabindex="-1">安装 pm2 实现进程守护 <a class="header-anchor" href="#安装-pm2-实现进程守护" aria-label="Permalink to &quot;安装 pm2 实现进程守护&quot;">​</a></h3><p>安装 （回到 / 目录）</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span></span></code></pre></div><p>测试是否安装成功</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;">    </span><span style="color:#C3E88D;">（打印版本）</span></span></code></pre></div><p>代替node启动服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">文件名.js</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">（后面还可以跟上很多参数，暂时不需要了解）</span></span></code></pre></div><p>停止服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">文件名.js</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">（停止之后，在pm2的列表里面还存在，但是status项为stopped）</span></span></code></pre></div><p>展示当前pm2所管理的服务信息</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">list</span></span></code></pre></div><p>取消管理服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pm2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kill</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">（停止并取消管理服务，pm2的列表里面也没有对应的信息）</span></span></code></pre></div><h3 id="安全组配置以及域名解析" tabindex="-1">安全组配置以及域名解析 <a class="header-anchor" href="#安全组配置以及域名解析" aria-label="Permalink to &quot;安全组配置以及域名解析&quot;">​</a></h3><p>安装好node 和 mongodb 数据库，并且使用 xftp 将 项目上传到服务器之后，并启动项目就可以通过通过公网ip来进行访问，但是还需要配置好安全组才能开放对应的端口，如果还需要使用域名来访问的话，就需要设置好域名解析，方法如下：</p><p><strong>配置安全组</strong></p><p><img src="`+i+'" alt=""><img src="'+y+'" alt=""></p><p><strong>域名解析</strong></p><p><img src="'+C+'" alt=""><img src="'+d+'" alt=""><img src="'+D+'" alt=""><img src="'+h+'" alt=""></p><h2 id="安装-nginx-服务器" tabindex="-1">安装 nginx 服务器 <a class="header-anchor" href="#安装-nginx-服务器" aria-label="Permalink to &quot;安装 nginx 服务器&quot;">​</a></h2><h3 id="下载nginx" tabindex="-1">下载nginx <a class="header-anchor" href="#下载nginx" aria-label="Permalink to &quot;下载nginx&quot;">​</a></h3><p>地址：<a href="http://nginx.org/en/download.html" target="_blank" rel="noreferrer">http://nginx.org/en/download.html</a></p><p><img src="'+g+'" alt=""></p><p>下载nginx-_12.tar.gz的源代玛文件: wget htp:/nginxc org/download/nginx- 12.2.tar.g</p><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p>nginx的安装需要Linux安装相关的几个库，否则配置和编译会出现错误，这几个库分别是</p><blockquote><p>gcc编译器：gcc</p></blockquote><blockquote><p>openssl库：openssl openssl-devel</p></blockquote><blockquote><p>pcre库：pcre pcre-devel</p></blockquote><blockquote><p>zlib库：zlib zlib-devel</p></blockquote><p>一次性安装的方法：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yum</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gcc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">openssl-devel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pcre</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pcre-devel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zlib</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zlib-devel</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-y</span></span></code></pre></div><h3 id="正式安装nginx" tabindex="-1">正式安装nginx <a class="header-anchor" href="#正式安装nginx" aria-label="Permalink to &quot;正式安装nginx&quot;">​</a></h3><h4 id="上传nginx压缩包到服务器" tabindex="-1">上传nginx压缩包到服务器 <a class="header-anchor" href="#上传nginx压缩包到服务器" aria-label="Permalink to &quot;上传nginx压缩包到服务器&quot;">​</a></h4><p>在服务器中使用 ==mkdir 文件夹名称== 命令新建一个文件夹存放nginx压缩包，然后通过 cd 命令进入到该文件夹中</p><p>使用rz命令上传</p><blockquote><p>如果没有 rz 命令</p><p>1、需要上传或者下载,需要使用rz和sz命令。如果linux上没有这两个命令工具,则需要先安装。可以使用yum安装。运行命令yum install lrzsz。 2、安装完成后就可以使用rz命令上传本地的文件到linux平台。运行rz命令,会弹出选择文件的对话框</p></blockquote><h4 id="解压" tabindex="-1">解压 <a class="header-anchor" href="#解压" aria-label="Permalink to &quot;解压&quot;">​</a></h4><blockquote><p>解压下载下来的nginx文件，执行命令: tar -zxvf nginx-1.12.2.tar.gz</p><p>在输入命令的时候可以使用 tab 键补全nginx的文件名称</p></blockquote><h4 id="指定安装路径" tabindex="-1">指定安装路径 <a class="header-anchor" href="#指定安装路径" aria-label="Permalink to &quot;指定安装路径&quot;">​</a></h4><p>切换到nginx解压后的文件夹里 nginx-1.12.2 执行命令</p><blockquote><p>/configure --prefix=/usr/local/nginx</p><p>(其中--prefix是指定nginx安装路径)</p></blockquote><h4 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h4><p>执行命令</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">make</span></span></code></pre></div><h4 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h4><p>执行命令安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">make</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span></code></pre></div><h4 id="启动nginx" tabindex="-1">启动nginx <a class="header-anchor" href="#启动nginx" aria-label="Permalink to &quot;启动nginx&quot;">​</a></h4><h1 id="node项目部署以及搭建nginx服务器" tabindex="-1">node项目部署以及搭建nginx服务器 <a class="header-anchor" href="#node项目部署以及搭建nginx服务器" aria-label="Permalink to &quot;node项目部署以及搭建nginx服务器&quot;">​</a></h1><blockquote><p>普通启动</p><blockquote><p>切换到nginx安装目录的sbin目录下，执行：./nginx</p></blockquote></blockquote><blockquote><p>通过配置文件启动</p><blockquote><p>./nginx -c /usr/local/nginx/conf/nginx.conf 或 /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</p><blockquote><p>解释： /usr/local/nginx/sbin/nginx 和 /usr/local/nginx/conf/nginx.conf 是nginx安装目录的sbin目录以及nginx配置文件所在的路径 , -c是指定配置文件</p></blockquote></blockquote></blockquote><h4 id="检查nginx是否启动" tabindex="-1">检查nginx是否启动 <a class="header-anchor" href="#检查nginx是否启动" aria-label="Permalink to &quot;检查nginx是否启动&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-ef</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nginx</span></span></code></pre></div><p><img src="'+A+'" alt=""></p><p>nginx体系结构由master进程和其worker进程组成； master进程读取配置文件，并维护worker进程，而worker进程则对请求进行实际处理</p><h4 id="浏览器访问nginx服务器" tabindex="-1">浏览器访问nginx服务器 <a class="header-anchor" href="#浏览器访问nginx服务器" aria-label="Permalink to &quot;浏览器访问nginx服务器&quot;">​</a></h4><p>nginx服务器部署成功后将会出现以下界面 <img src="'+F+`" alt=""></p><h4 id="关闭nginx" tabindex="-1">关闭nginx <a class="header-anchor" href="#关闭nginx" aria-label="Permalink to &quot;关闭nginx&quot;">​</a></h4><blockquote><p>优雅的关闭</p><blockquote><p>找出nginx的进程号：ps -ef | grep nginx 执行命令：kill -QUIT 主pid 其中pid是主进程号的pid(master process),其他为子进程pid(worker process)</p></blockquote></blockquote><blockquote><p>快速关闭</p><blockquote><p>执行命令：</p></blockquote></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">kill</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-TERM</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">主pid</span></span></code></pre></div><h4 id="重启nginx" tabindex="-1">重启nginx <a class="header-anchor" href="#重启nginx" aria-label="Permalink to &quot;重启nginx&quot;">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">./nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span></span></code></pre></div><h4 id="修改nginx配置文件" tabindex="-1">修改nginx配置文件 <a class="header-anchor" href="#修改nginx配置文件" aria-label="Permalink to &quot;修改nginx配置文件&quot;">​</a></h4><p>进入nginx.conf：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/nginx/conf/nginx.conf</span></span></code></pre></div><p>修改配置文件：</p><pre><code>按 i 键进入编辑模式
不保存退出（不强制退出）： esc --&gt;  :q! --&gt; 回车（强制退出）
                        esc --&gt; :q --&gt; 回车 （不强制退出）

保存退出：esc --&gt; :wq --&gt; 回车
</code></pre><p>测试是否修改成功：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">/usr/local/nginx/sbin/nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span></span></code></pre></div><p>重新加载：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">/usr/local/nginx/sbin/nginx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">reload</span></span></code></pre></div><p>以下配置主要是配置 gzip ， 请求转发（普通请求和websoket请求）</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">#user  nobody</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">worker_processes  </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#error_log  logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">error</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">#error_log  logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">error</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log  notice</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">#error_log  logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">error</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">log  info</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">#pid        logs</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">nginx</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">pid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">events </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">worker_connections</span><span style="color:#F07178;">  </span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">http </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">include</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">mime</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">types</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">default_type</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">application</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">octet</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">stream</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">client_max_body_size</span><span style="color:#F07178;">   20</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">     </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">sendfile</span><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">keepalive_timeout</span><span style="color:#F07178;">  </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">gzip</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">on</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> #</span><span style="color:#A6ACCD;">开启gzip压缩</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">gzip_comp_level</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> #</span><span style="color:#A6ACCD;">压缩等级</span></span>
<span class="line"><span style="color:#F07178;">    # </span><span style="color:#A6ACCD;">进行压缩的文件类型</span><span style="color:#F07178;">。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">gzip_types</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">plain</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">application</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">javascript</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">application</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">javascript</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">css</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">application</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">xml</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">xml</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">text</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">javascript</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">application</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">json</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">png</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">gif</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">jpeg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">server</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">listen</span><span style="color:#F07178;">       </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">server_name</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">localhost</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        #</span><span style="color:#A6ACCD;">charset</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">koi8</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">        #</span><span style="color:#A6ACCD;">代理node服务</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">location</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">~</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">proxy_set_header</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Upgrade</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">$http_upgrade</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  # </span><span style="color:#A6ACCD;">转发websocket请求的配置</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">proxy_set_header</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Connection</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">upgrade</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">   # </span><span style="color:#A6ACCD;">转发websocket请求的配置</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">proxy_pass</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">http</span><span style="color:#89DDFF;">:</span><span style="color:#676E95;font-style:italic;">//127.0.0.1:81; # node服务启动的端口</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">                             </span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">error_page</span><span style="color:#F07178;">   </span><span style="color:#F78C6C;">500</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">502</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">503</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">504</span><span style="color:#F07178;">  </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;">50</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">location</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;">50</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">html</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">root</span><span style="color:#F07178;">   </span><span style="color:#A6ACCD;">html</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">       </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="关于网站的图片资源" tabindex="-1">关于网站的图片资源 <a class="header-anchor" href="#关于网站的图片资源" aria-label="Permalink to &quot;关于网站的图片资源&quot;">​</a></h2><p>因为购买的服务器性能还是低的,所以图片资源在加载的时候还是比较慢的，因此这些图片资源还是要进行处理，在这里介绍两种方式：</p><p><strong>CDN</strong> 因为博主也没用使用过这种这种方式，只是看到过相关的文章，所以大家还是自行百度，另外这种方式是需要花费资金的 <a href="https://www.bytecho.net/archives/setupcdn.html" target="_blank" rel="noreferrer">cdn的介绍</a></p><p><strong>使用图床</strong> 我的博客采用的就是这种方式，感觉还是可以的，推荐一下目前使用过的两个图床</p><ul><li>即刻图床：有对应的chrome插件，大家可以百度一下安装方式</li><li>SM.MS ：<a href="https://sm.ms/" target="_blank" rel="noreferrer">地址</a> 免费的一个图床，还是不错的</li></ul>`,127),m=[u];function x(k,q,f,_,v,E){return a(),n("div",null,m)}const w=s(b,[["render",x]]);export{P as __pageData,w as default};
